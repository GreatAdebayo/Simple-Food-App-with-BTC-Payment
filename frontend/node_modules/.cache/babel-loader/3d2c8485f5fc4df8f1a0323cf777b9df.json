{"ast":null,"code":"\"use strict\";\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.attachSharedListeners = void 0;\n\nvar globals_1 = require(\"./globals\");\n\nvar constants_1 = require(\"./constants\");\n\nvar manage_subscribers_1 = require(\"./manage-subscribers\");\n\nvar socket_io_1 = require(\"./socket-io\");\n\nvar bindMessageHandler = function (webSocketInstance, url) {\n  webSocketInstance.onmessage = function (message) {\n    manage_subscribers_1.getSubscribers(url).forEach(function (subscriber) {\n      if (subscriber.optionsRef.current.onMessage) {\n        subscriber.optionsRef.current.onMessage(message);\n      }\n\n      if (typeof subscriber.optionsRef.current.filter === 'function' && subscriber.optionsRef.current.filter(message) !== true) {\n        return;\n      }\n\n      subscriber.setLastMessage(message);\n    });\n  };\n};\n\nvar bindOpenHandler = function (webSocketInstance, url) {\n  webSocketInstance.onopen = function (event) {\n    manage_subscribers_1.getSubscribers(url).forEach(function (subscriber) {\n      subscriber.reconnectCount.current = 0;\n\n      if (subscriber.optionsRef.current.onOpen) {\n        subscriber.optionsRef.current.onOpen(event);\n      }\n\n      subscriber.setReadyState(constants_1.ReadyState.OPEN);\n    });\n  };\n};\n\nvar bindCloseHandler = function (webSocketInstance, url) {\n  if (webSocketInstance instanceof WebSocket) {\n    webSocketInstance.onclose = function (event) {\n      manage_subscribers_1.getSubscribers(url).forEach(function (subscriber) {\n        if (subscriber.optionsRef.current.onClose) {\n          subscriber.optionsRef.current.onClose(event);\n        }\n\n        subscriber.setReadyState(constants_1.ReadyState.CLOSED);\n      });\n      delete globals_1.sharedWebSockets[url];\n      manage_subscribers_1.getSubscribers(url).forEach(function (subscriber) {\n        var _a, _b;\n\n        if (subscriber.optionsRef.current.shouldReconnect && subscriber.optionsRef.current.shouldReconnect(event)) {\n          var reconnectAttempts = (_a = subscriber.optionsRef.current.reconnectAttempts) !== null && _a !== void 0 ? _a : constants_1.DEFAULT_RECONNECT_LIMIT;\n\n          if (subscriber.reconnectCount.current < reconnectAttempts) {\n            setTimeout(function () {\n              subscriber.reconnectCount.current++;\n              subscriber.reconnect.current();\n            }, (_b = subscriber.optionsRef.current.reconnectInterval) !== null && _b !== void 0 ? _b : constants_1.DEFAULT_RECONNECT_INTERVAL_MS);\n          } else {\n            subscriber.optionsRef.current.onReconnectStop && subscriber.optionsRef.current.onReconnectStop(subscriber.optionsRef.current.reconnectAttempts);\n            console.warn(\"Max reconnect attempts of \" + reconnectAttempts + \" exceeded\");\n          }\n        }\n      });\n    };\n  }\n};\n\nvar bindErrorHandler = function (webSocketInstance, url) {\n  webSocketInstance.onerror = function (error) {\n    manage_subscribers_1.getSubscribers(url).forEach(function (subscriber) {\n      if (subscriber.optionsRef.current.onError) {\n        subscriber.optionsRef.current.onError(error);\n      }\n\n      if (constants_1.isEventSourceSupported && webSocketInstance instanceof EventSource) {\n        subscriber.optionsRef.current.onClose && subscriber.optionsRef.current.onClose(__assign(__assign({}, error), {\n          code: 1006,\n          reason: \"An error occurred with the EventSource: \" + error,\n          wasClean: false\n        }));\n        subscriber.setReadyState(constants_1.ReadyState.CLOSED);\n      }\n    });\n\n    if (constants_1.isEventSourceSupported && webSocketInstance instanceof EventSource) {\n      webSocketInstance.close();\n    }\n  };\n};\n\nexports.attachSharedListeners = function (webSocketInstance, url, optionsRef, sendMessage) {\n  var interval;\n\n  if (optionsRef.current.fromSocketIO) {\n    interval = socket_io_1.setUpSocketIOPing(sendMessage);\n  }\n\n  bindMessageHandler(webSocketInstance, url);\n  bindCloseHandler(webSocketInstance, url);\n  bindOpenHandler(webSocketInstance, url);\n  bindErrorHandler(webSocketInstance, url);\n  return function () {\n    if (interval) clearInterval(interval);\n  };\n};","map":{"version":3,"sources":["../../src/lib/attach-shared-listeners.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.attachSharedListeners = void 0;\nvar globals_1 = require(\"./globals\");\nvar constants_1 = require(\"./constants\");\nvar manage_subscribers_1 = require(\"./manage-subscribers\");\nvar socket_io_1 = require(\"./socket-io\");\nvar bindMessageHandler = function (webSocketInstance, url) {\n    webSocketInstance.onmessage = function (message) {\n        manage_subscribers_1.getSubscribers(url).forEach(function (subscriber) {\n            if (subscriber.optionsRef.current.onMessage) {\n                subscriber.optionsRef.current.onMessage(message);\n            }\n            if (typeof subscriber.optionsRef.current.filter === 'function' &&\n                subscriber.optionsRef.current.filter(message) !== true) {\n                return;\n            }\n            subscriber.setLastMessage(message);\n        });\n    };\n};\nvar bindOpenHandler = function (webSocketInstance, url) {\n    webSocketInstance.onopen = function (event) {\n        manage_subscribers_1.getSubscribers(url).forEach(function (subscriber) {\n            subscriber.reconnectCount.current = 0;\n            if (subscriber.optionsRef.current.onOpen) {\n                subscriber.optionsRef.current.onOpen(event);\n            }\n            subscriber.setReadyState(constants_1.ReadyState.OPEN);\n        });\n    };\n};\nvar bindCloseHandler = function (webSocketInstance, url) {\n    if (webSocketInstance instanceof WebSocket) {\n        webSocketInstance.onclose = function (event) {\n            manage_subscribers_1.getSubscribers(url).forEach(function (subscriber) {\n                if (subscriber.optionsRef.current.onClose) {\n                    subscriber.optionsRef.current.onClose(event);\n                }\n                subscriber.setReadyState(constants_1.ReadyState.CLOSED);\n            });\n            delete globals_1.sharedWebSockets[url];\n            manage_subscribers_1.getSubscribers(url).forEach(function (subscriber) {\n                var _a, _b;\n                if (subscriber.optionsRef.current.shouldReconnect &&\n                    subscriber.optionsRef.current.shouldReconnect(event)) {\n                    var reconnectAttempts = (_a = subscriber.optionsRef.current.reconnectAttempts) !== null && _a !== void 0 ? _a : constants_1.DEFAULT_RECONNECT_LIMIT;\n                    if (subscriber.reconnectCount.current < reconnectAttempts) {\n                        setTimeout(function () {\n                            subscriber.reconnectCount.current++;\n                            subscriber.reconnect.current();\n                        }, (_b = subscriber.optionsRef.current.reconnectInterval) !== null && _b !== void 0 ? _b : constants_1.DEFAULT_RECONNECT_INTERVAL_MS);\n                    }\n                    else {\n                        subscriber.optionsRef.current.onReconnectStop && subscriber.optionsRef.current.onReconnectStop(subscriber.optionsRef.current.reconnectAttempts);\n                        console.warn(\"Max reconnect attempts of \" + reconnectAttempts + \" exceeded\");\n                    }\n                }\n            });\n        };\n    }\n};\nvar bindErrorHandler = function (webSocketInstance, url) {\n    webSocketInstance.onerror = function (error) {\n        manage_subscribers_1.getSubscribers(url).forEach(function (subscriber) {\n            if (subscriber.optionsRef.current.onError) {\n                subscriber.optionsRef.current.onError(error);\n            }\n            if (constants_1.isEventSourceSupported && webSocketInstance instanceof EventSource) {\n                subscriber.optionsRef.current.onClose && subscriber.optionsRef.current.onClose(__assign(__assign({}, error), { code: 1006, reason: \"An error occurred with the EventSource: \" + error, wasClean: false }));\n                subscriber.setReadyState(constants_1.ReadyState.CLOSED);\n            }\n        });\n        if (constants_1.isEventSourceSupported && webSocketInstance instanceof EventSource) {\n            webSocketInstance.close();\n        }\n    };\n};\nexports.attachSharedListeners = function (webSocketInstance, url, optionsRef, sendMessage) {\n    var interval;\n    if (optionsRef.current.fromSocketIO) {\n        interval = socket_io_1.setUpSocketIOPing(sendMessage);\n    }\n    bindMessageHandler(webSocketInstance, url);\n    bindCloseHandler(webSocketInstance, url);\n    bindOpenHandler(webSocketInstance, url);\n    bindErrorHandler(webSocketInstance, url);\n    return function () {\n        if (interval)\n            clearInterval(interval);\n    };\n};\n//# sourceMappingURL=attach-shared-listeners.js.map"]},"metadata":{},"sourceType":"script"}