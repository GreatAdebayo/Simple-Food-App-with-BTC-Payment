{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\btcint\\\\frontend\\\\src\\\\components\\\\payment.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { Baseurl } from './baseurl';\nimport QRCode from 'react-qr-code';\nimport { useHistory } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Payment = () => {\n  _s();\n\n  const [details, setDetails] = useState('');\n  let history = useHistory();\n  useEffect(() => {\n    let code = localStorage.Code;\n    axios.post(`${Baseurl}payment.php`, JSON.stringify(code)).then(res => {\n      let info = res.data;\n      localStorage.setItem('Details', JSON.stringify(info));\n      let details = JSON.parse(localStorage.Details);\n      setDetails(details);\n      let address = details.address;\n      let socket = new WebSocket(`wss://www.blockonomics.co/payment/${address}`);\n\n      socket.onmessage = function (event) {\n        let response = JSON.parse(event.data); //This condition ensures that we reload only when we get a \n        //new payment status and don't go into a loop\n\n        if (parseInt(response.status) > parseInt(details.status)) {\n          setTimeout(function () {\n            window.location.reload();\n          }, 1000); // setTimeout(() => history.push('/order'), 1200);\n\n          if (resa) {}\n        }\n      };\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col mt-5\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"text-center\",\n            children: \"BTC PAYMENT\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 17\n          }, this), details ? /*#__PURE__*/_jsxDEV(QRCode, {\n            value: details.address\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 29\n          }, this) : null, /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"mt-5\",\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Wallet Address: \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 39\n            }, this), details.address]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Amount: \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 22\n            }, this), details.price]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Status: \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 22\n            }, this), details.status == 0 ? /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"You payment has been received. Invoice will be marked paid on two blockchain confirmations.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 70\n            }, this) : details.status == 1 ? /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"You payment has been received. Invoice will be marked paid on two blockchain confirmations.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 41\n            }, this) : details.status == 2 ? /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Paid\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 41\n            }, this) : details.status == -1 ? /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Unpaid\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 42\n            }, this) : details.status == -2 ? /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Too little paid, please pay the rest.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 42\n            }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Expired\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 93\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-uppercase\",\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Payment for: \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 49\n            }, this), details.product]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n\n_s(Payment, \"6j7uyNcUvBQbdw65sD5uygek7Ko=\", false, function () {\n  return [useHistory];\n});\n\n_c = Payment;\nexport default Payment;\n\nvar _c;\n\n$RefreshReg$(_c, \"Payment\");","map":{"version":3,"sources":["C:/xampp/htdocs/btcint/frontend/src/components/payment.js"],"names":["React","useEffect","useState","axios","Baseurl","QRCode","useHistory","Payment","details","setDetails","history","code","localStorage","Code","post","JSON","stringify","then","res","info","data","setItem","parse","Details","address","socket","WebSocket","onmessage","event","response","parseInt","status","setTimeout","window","location","reload","resa","price","product"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react'\r\nimport axios from 'axios';\r\nimport { Baseurl } from './baseurl';\r\nimport QRCode from 'react-qr-code';\r\nimport {useHistory} from 'react-router-dom';\r\n\r\n\r\nconst Payment = () => {\r\n    const [details, setDetails] = useState('')\r\n    let history = useHistory();\r\n    useEffect(() => {\r\n        let code = localStorage.Code;\r\n        axios.post(`${Baseurl}payment.php`, JSON.stringify(code)\r\n        ).then(res => {\r\n            let info = res.data \r\n            localStorage.setItem('Details', JSON.stringify(info))\r\n            let details = JSON.parse(localStorage.Details)\r\n            setDetails(details);\r\n            let address = details.address\r\n            let socket = new WebSocket(`wss://www.blockonomics.co/payment/${address}`);\r\n            socket.onmessage = function(event){\r\n            let response = JSON.parse(event.data);\r\n            //This condition ensures that we reload only when we get a \r\n             //new payment status and don't go into a loop\r\n            if (parseInt(response.status) > parseInt(details.status)){\r\n            setTimeout(function(){window.location.reload() }, 1000);\r\n            // setTimeout(() => history.push('/order'), 1200);\r\n            if(resa){\r\n\r\n            }\r\n            \r\n            } \r\n        }\r\n        \r\n           })\r\n    }, [])\r\n \r\n\r\n    return (\r\n        <>\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n                <div className=\"col mt-5\">\r\n                <h4 className=\"text-center\">BTC PAYMENT</h4>\r\n                 {details ? <QRCode value={details.address} /> : null}\r\n                  <p className=\"mt-5\"><strong>Wallet Address: </strong>{details.address}</p>\r\n                  <p><strong>Amount: </strong>{details.price}</p>\r\n                  <p><strong>Status: </strong>{details.status == 0 ? <span>You payment has been received. Invoice will be marked paid on two blockchain confirmations.</span>:\r\n                  details.status == 1 ? <span>You payment has been received. Invoice will be marked paid on two blockchain confirmations.</span>:\r\n                  details.status == 2 ? <span>Paid</span>: \r\n                  details.status == -1 ? <span>Unpaid</span>:\r\n                  details.status == -2 ? <span>Too little paid, please pay the rest.</span>:<span>Expired</span>}</p>\r\n                  <p className=\"text-uppercase\"><strong>Payment for: </strong>{details.product}</p>\r\n                </div>\r\n\r\n            </div>\r\n\r\n        </div>\r\n\r\n        \r\n        </>\r\n    )\r\n}\r\n\r\nexport default Payment\r\n"]},"metadata":{},"sourceType":"module"}